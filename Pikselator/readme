-=== Pixelator for Bitmap images ===-

This project was made for my Assembly Language subject.
The main purpose of this task was to learn about Microsoft Assembly Language (masm) and the differences between low-level programming language and high-level one.
I choose C# language, since it is pretty easy to build simple front-end and not very complicated to implement assembly functions.

User can choose what library should the application use to develop pixelated bitamp. Either C# or MASM.
Another possibility that a user have is to change the level of pixelization. It means how much "blured" should the picture be.
Application is compatible with multi-threading. There is a possibility to choose how many maximum threads should the program use.
Process of pixelation is divided in tasks, and the threads that are free to work choose task to do.

In order to be able to implement Assembly funcionality I was forced to learn about how Bitamp file format is working. To be exact: what each and every byte is representing,
an how it should be modified to get a successfull outcome.

While doing this project I learned that the high-level programming languages are the blessing for every programmer. Nearly 160 lines of ASM code can be shortend to around 35 in C#.
Although the application while working on ASM library can be in some cases a bit quicker, choosing between number of used threads gives a bigger difference.

If you want to run this app, make sure you open Pikselator\Pikselator\bin\Release\Pikselator. Feel free to use this project. :-)
Dawid.

